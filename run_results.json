{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.7", "generated_at": "2024-10-24T09:31:01.318307Z", "invocation_id": "6502634d-b96b-4b4c-978d-1ebaedde113f", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:30:58.101944Z", "completed_at": "2024-10-24T09:31:00.371867Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:00.372924Z", "completed_at": "2024-10-24T09:31:00.372966Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.901228666305542, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.dim_dates", "compiled": true, "compiled_code": "WITH date_dim AS (\n    \n    \nwith base_dates as (\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n     + \n    \n    p12.generated_number * power(2, 12)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n     cross join \n    \n    p as p12\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 5509\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    dateadd(\n        day,\n        (row_number() over (order by 1) - 1),\n        cast('2010-01-01' as timestamp)\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2025-01-31' as timestamp)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as timestamp) as date_day\nfrom\n    date_spine d\n\n\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast(\n\n    dateadd(\n        year,\n        -1,\n        d.date_day\n        )\n\n as date) as prior_year_date_day,\n        cast(\n\n    dateadd(\n        day,\n        -364,\n        d.date_day\n        )\n\n as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    cast(\n\n    dateadd(\n        day,\n        -1,\n        d.date_day\n        )\n\n as date) as prior_date_day,\n    cast(\n\n    dateadd(\n        day,\n        1,\n        d.date_day\n        )\n\n as date) as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end as day_of_week,\n    date_part('dayofweekiso', d.date_day) as day_of_week_iso,\n    -- long version not implemented on Snowflake so we're doing it manually :/\n    case dayname(d.date_day)\n        when 'Mon' then 'Monday'\n        when 'Tue' then 'Tuesday'\n        when 'Wed' then 'Wednesday'\n        when 'Thu' then 'Thursday'\n        when 'Fri' then 'Friday'\n        when 'Sat' then 'Saturday'\n        when 'Sun' then 'Sunday'\n    end as day_of_week_name,\n    dayname(d.date_day) as day_of_week_name_short,\n    date_part('day', d.date_day) as day_of_month,\n    date_part('dayofyear', d.date_day) as day_of_year,\n\n    \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end - 1),\n        d.date_day\n        )\n\n as date) as week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end - 1),\n        d.date_day\n        )\n\n as date)\n        )\n\n as date) as week_end_date,\n    \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.prior_year_over_year_date_day) = 7 then 1\n            else date_part('dayofweek', d.prior_year_over_year_date_day) + 1\n        end - 1),\n        d.prior_year_over_year_date_day\n        )\n\n as date) as prior_year_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.prior_year_over_year_date_day) = 7 then 1\n            else date_part('dayofweek', d.prior_year_over_year_date_day) + 1\n        end - 1),\n        d.prior_year_over_year_date_day\n        )\n\n as date)\n        )\n\n as date) as prior_year_week_end_date,\n    cast(date_part('week', d.date_day) as integer) as week_of_year,\n\n    cast(date_trunc('week', d.date_day) as date) as iso_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        cast(date_trunc('week', d.date_day) as date)\n        )\n\n as date) as iso_week_end_date,\n    cast(date_trunc('week', d.prior_year_over_year_date_day) as date) as prior_year_iso_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        cast(date_trunc('week', d.prior_year_over_year_date_day) as date)\n        )\n\n as date) as prior_year_iso_week_end_date,\n    cast(date_part('weekiso', d.date_day) as integer) as iso_week_of_year,\n\n    cast(date_part('week', d.prior_year_over_year_date_day) as integer) as prior_year_week_of_year,\n    cast(date_part('weekiso', d.prior_year_over_year_date_day) as integer) as prior_year_iso_week_of_year,\n\n    cast(date_part('month', d.date_day) as integer) as month_of_year,\n    to_char(d.date_day, 'MMMM')  as month_name,\n    to_char(d.date_day, 'MON')  as month_name_short,\n\n    cast(date_trunc('month', d.date_day) as date) as month_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        month,\n        1,\n        date_trunc('month', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as month_end_date,\n\n    cast(date_trunc('month', d.prior_year_date_day) as date) as prior_year_month_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        month,\n        1,\n        date_trunc('month', d.prior_year_date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as prior_year_month_end_date,\n\n    cast(date_part('quarter', d.date_day) as integer) as quarter_of_year,\n    cast(date_trunc('quarter', d.date_day) as date) as quarter_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        quarter,\n        1,\n        date_trunc('quarter', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as quarter_end_date,\n\n    cast(date_part('year', d.date_day) as integer) as year_number,\n    cast(date_trunc('year', d.date_day) as date) as year_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        year,\n        1,\n        date_trunc('year', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n\n\n)\n\nSELECT * FROM date_dim", "relation_name": "DATAFESTAFRICA.CORE.dim_dates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.005891Z", "completed_at": "2024-10-24T09:31:01.012476Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.013802Z", "completed_at": "2024-10-24T09:31:01.013826Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00972294807434082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_attendance", "compiled": true, "compiled_code": "SELECT DISTINCT\n    student_course_id,\n    total_minutes,\n    minutes_present,\n    created_at as attendance_created_at,\n    TO_CHAR(CAST(created_at AS DATE), 'YYYYMMDD') AS attendance_created_date_id,\n    updated_at as attendance_updated_at,\n    TO_CHAR(CAST(updated_at AS DATE), 'YYYYMMDD') AS attendance_updated_date_id\nFROM DATAFESTAFRICA.RAW.raw_attendance_day", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_attendance"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.018271Z", "completed_at": "2024-10-24T09:31:01.024323Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.025023Z", "completed_at": "2024-10-24T09:31:01.025040Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008604288101196289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_calendar_events", "compiled": true, "compiled_code": "SELECT DISTINCT\n    id as calendar_event_id,\n    CAST(syear AS INT) as session_year,\n    school_id,\n    school_date as event_date,\n    title as event_name,\n    description as event_description,\n    created_at as event_created_at,\n    TO_CHAR(CAST(created_at AS DATE), 'YYYYMMDD') AS event_created_date_id,\n    updated_at as event_updated_at,\n    TO_CHAR(CAST(updated_at AS DATE), 'YYYYMMDD') AS event_updated_date_id\nFROM DATAFESTAFRICA.RAW.raw_calendar_events", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_calendar_events"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.027952Z", "completed_at": "2024-10-24T09:31:01.032729Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.033301Z", "completed_at": "2024-10-24T09:31:01.033316Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00661778450012207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_classes", "compiled": true, "compiled_code": "SELECT DISTINCT\n    id as class_id,\n    school_id,\n    short_name as class_short_name,\n    title as class_title,\n    sort_order,\n    created_at as class_created_at,\n    TO_CHAR(CAST(created_at AS DATE), 'YYYYMMDD') AS class_created_date_id,\n    updated_at as class_updated_at,\n    TO_CHAR(CAST(updated_at AS DATE), 'YYYYMMDD') AS class_updated_date_id\nFROM DATAFESTAFRICA.RAW.raw_school_gradelevels", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_classes"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.036210Z", "completed_at": "2024-10-24T09:31:01.042595Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.043305Z", "completed_at": "2024-10-24T09:31:01.043319Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008549213409423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_courses", "compiled": true, "compiled_code": "SELECT DISTINCT\n    course_id,\n    subject_id,\n    school_id,\n    grade_level as class_id,\n    teacher_id,\n    title as course_title,\n    short_name as course_short_name,\n    CASE \n        WHEN department IS NULL THEN 'General'\n    ELSE department\n    END AS course_department,\n    (credit_hours * 16 * 60) as total_teaching_hours_period,\n    description as course_description,\n    created_at as course_created_at,\n    TO_CHAR(CAST(created_at AS DATE), 'YYYYMMDD') AS course_created_date_id,\n    updated_at as course_updated_at,\n    TO_CHAR(CAST(updated_at AS DATE), 'YYYYMMDD') AS course_updated_date_id\nFROM DATAFESTAFRICA.RAW.raw_courses", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_courses"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.045969Z", "completed_at": "2024-10-24T09:31:01.051575Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.052291Z", "completed_at": "2024-10-24T09:31:01.052305Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007622957229614258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_disciplinary_records", "compiled": true, "compiled_code": "SELECT DISTINCT\n    id as offence_id,\n    student_id,\n    school_id,\n    staff_id as teacher_id,\n    entry_date as offence_recorded_date,\n    TO_CHAR(CAST(entry_date AS DATE), 'YYYYMMDD') AS offence_recorded_date_id,\n    referral_date as disciplinary_date,\n    TO_CHAR(CAST(referral_date AS DATE), 'YYYYMMDD') AS disciplinary_date_id,\n    offence as student_offence,\n    action_taken as disciplinary_action_taken\nFROM DATAFESTAFRICA.RAW.raw_discipline_referrals", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_disciplinary_records"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.055569Z", "completed_at": "2024-10-24T09:31:01.060470Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.061111Z", "completed_at": "2024-10-24T09:31:01.061123Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007069110870361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_extracurricular_activity", "compiled": true, "compiled_code": "SELECT DISTINCT\n    id as activity_id,\n    school_id,\n    title as activity,\n    comment as activity_description,\n    created_at as activity_created_at,\n    TO_CHAR(CAST(created_at AS DATE), 'YYYYMMDD') AS activity_created_date_id,\n    updated_at as activity_updated_at,\n    TO_CHAR(CAST(updated_at AS DATE), 'YYYYMMDD') AS activity_updated_date_id\nFROM DATAFESTAFRICA.RAW.raw_eligibility_activities", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_extracurricular_activity"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.064019Z", "completed_at": "2024-10-24T09:31:01.069102Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.070024Z", "completed_at": "2024-10-24T09:31:01.070040Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0074541568756103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_jamb_scores", "compiled": true, "compiled_code": "SELECT DISTINCT\n    student_id,\n    exam_year,\n    jamb_score\nFROM DATAFESTAFRICA.RAW.raw_student_jamb_scores", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_jamb_scores"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.073837Z", "completed_at": "2024-10-24T09:31:01.079812Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.080644Z", "completed_at": "2024-10-24T09:31:01.080655Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008470773696899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_marking_periods", "compiled": true, "compiled_code": "SELECT DISTINCT\n    marking_period_id,\n    mp_source as source,\n    school_id,\n    mp_type as term_type,\n    title as assessment_type,\n    sort_order,\n    points as overall_score\nFROM DATAFESTAFRICA.RAW.raw_marking_periods", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_marking_periods"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.083489Z", "completed_at": "2024-10-24T09:31:01.087740Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.088279Z", "completed_at": "2024-10-24T09:31:01.088287Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005969047546386719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_parents", "compiled": true, "compiled_code": "SELECT DISTINCT\n    parent_id,\n    last_name,\n    first_name,\n    middle_name,\n    CONCAT(last_name, ' ', middle_name, ' ', first_name) AS full_name,\n    education_level,\n    created_at as parent_registered_at,\n    TO_CHAR(CAST(created_at AS DATE), 'YYYYMMDD') AS registration_date_id,\n    updated_at as parent_updated_at,\n    TO_CHAR(CAST(updated_at AS DATE), 'YYYYMMDD') AS updated_date_id\nFROM DATAFESTAFRICA.RAW.raw_parent", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_parents"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.091018Z", "completed_at": "2024-10-24T09:31:01.096417Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.097218Z", "completed_at": "2024-10-24T09:31:01.097228Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0075037479400634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_schools", "compiled": true, "compiled_code": "SELECT DISTINCT\n    id as school_id,\n    CAST(syear AS INT) as session_year,\n    title as school_name,\n    address as school_address,\n    city,\n    state,\n    zipcode,\n    phone,\n    principal,\n    www_address as website_url,\n    school_number as school_phone_number,\n    short_name,\n    reporting_gp_scale,\n    grading_scale,\n    sort_order,\n    created_at as school_created_at,\n    TO_CHAR(CAST(created_at AS DATE), 'YYYYMMDD') AS school_created_date_id,\n    updated_at as school_updated_at,\n    TO_CHAR(CAST(updated_at AS DATE), 'YYYYMMDD') AS school_updated_date_id\nFROM DATAFESTAFRICA.RAW.raw_schools", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_schools"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.099870Z", "completed_at": "2024-10-24T09:31:01.104562Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.105244Z", "completed_at": "2024-10-24T09:31:01.105254Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006575822830200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_student_activities", "compiled": true, "compiled_code": "SELECT DISTINCT\n    student_id,\n    activity_id,\n    created_at,\n    CASE \n        WHEN is_active = 1 THEN 'Active'\n        WHEN is_active = 0 THEN 'Not active'\n    END AS student_activity_status,\n    TO_CHAR(CAST(created_at AS DATE), 'YYYYMMDD') AS created_date_id,\n    updated_at,\n    TO_CHAR(CAST(updated_at AS DATE), 'YYYYMMDD') AS updated_date_id\nFROM DATAFESTAFRICA.RAW.raw_eligibility", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_student_activities"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.107957Z", "completed_at": "2024-10-24T09:31:01.112975Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.113818Z", "completed_at": "2024-10-24T09:31:01.113829Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007200956344604492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_student_polls", "compiled": true, "compiled_code": "SELECT DISTINCT\n    id AS poll_id,\n    school_id,\n    CAST(syear AS INT) AS session_year,\n    title AS poll_description,\n    CASE \n        WHEN poll_description LIKE '%Best%' THEN 'Bad'\n        WHEN poll_description LIKE '%Worst%' THEN 'Good'\n    END AS rating_type,\n    votes_number AS number_of_votes,\n    published_date,\n    TO_CHAR(CAST(published_date AS DATE), 'YYYYMMDD') AS published_date_id,\n    students_teacher_id AS related_teacher_id\nFROM DATAFESTAFRICA.RAW.raw_portal_polls", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_student_polls"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.116889Z", "completed_at": "2024-10-24T09:31:01.123873Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.124432Z", "completed_at": "2024-10-24T09:31:01.124441Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008929967880249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_students", "compiled": true, "compiled_code": "SELECT DISTINCT\n    student_id,\n    parent_id,\n    first_name,\n    last_name,\n    middle_name,\n    CONCAT(first_name, ' ', middle_name, ' ', last_name) AS full_name,\n    grade_level_id as class_id,\n    CASE WHEN bus_pickup = 'Y' THEN 'Yes'\n        ELSE 'No'\n    END AS bus_pickup,\n    CASE WHEN bus_dropoff = 'Y' THEN 'Yes'\n        ELSE 'No'\n    END AS bus_dropoff,\n    CASE WHEN departments IS NULL THEN 'None'\n        ELSE departments\n    END AS department,\n    CASE WHEN gender = 'M' THEN 'Male'\n        WHEN gender = 'F' THEN 'Female'\n    END AS gender,\n    CASE \n        WHEN health_status = 1 THEN 'Very Good Condition'\n        WHEN health_status = 2 THEN 'Good Condition'\n        WHEN health_status = 3 THEN 'Average Condition'\n        WHEN health_status = 4 THEN 'Poor Condition'\n    END AS health_condition,\n    created_at as student_registered_at,\n    TO_CHAR(CAST(created_at AS DATE), 'YYYYMMDD') AS registration_date_id,\n    updated_at as student_updated_at,\n    TO_CHAR(CAST(updated_at AS DATE), 'YYYYMMDD') AS updated_date_id\nFROM DATAFESTAFRICA.RAW.raw_students", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_students"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.127141Z", "completed_at": "2024-10-24T09:31:01.132105Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.132771Z", "completed_at": "2024-10-24T09:31:01.132780Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006807088851928711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_students_courses", "compiled": true, "compiled_code": "SELECT DISTINCT\n    student_course_id,\n    student_id,\n    course_id,\n    grade_level_id as class_id,\n    created_at,\n    TO_CHAR(CAST(created_at AS DATE), 'YYYYMMDD') AS created_date_id,\n    updated_at,\n    TO_CHAR(CAST(updated_at AS DATE), 'YYYYMMDD') AS updated_date_id\nFROM DATAFESTAFRICA.RAW.raw_students_courses", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_students_courses"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.135384Z", "completed_at": "2024-10-24T09:31:01.139501Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.140062Z", "completed_at": "2024-10-24T09:31:01.140071Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005841970443725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_students_grades", "compiled": true, "compiled_code": "SELECT DISTINCT\n    student_course_id,\n    marking_period_id,\n    points as scores\nFROM DATAFESTAFRICA.RAW.raw_gradebook_grades", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_students_grades"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.142725Z", "completed_at": "2024-10-24T09:31:01.146986Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.147696Z", "completed_at": "2024-10-24T09:31:01.147708Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00621795654296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_teachers", "compiled": true, "compiled_code": "SELECT DISTINCT \n    id as teacher_id,\n    last_name,\n    first_name,\n    middle_name,\n    CONCAT(first_name, ' ', middle_name, ' ', last_name) AS full_name,\n    created_at as employment_date,\n    TO_CHAR(CAST(created_at AS DATE), 'YYYYMMDD') AS employment_date_id,\n    updated_at as updated_employment_date,\n    TO_CHAR(CAST(updated_at AS DATE), 'YYYYMMDD') AS updated_employment_date_id\nFROM DATAFESTAFRICA.RAW.raw_teachers", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_teachers"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.150779Z", "completed_at": "2024-10-24T09:31:01.155712Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.156303Z", "completed_at": "2024-10-24T09:31:01.156313Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006989002227783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.stg_waec_grades", "compiled": true, "compiled_code": "SELECT DISTINCT\n    student_course_id,\n    exam_year,\n    waec_grade\nFROM DATAFESTAFRICA.RAW.raw_student_waec_grades", "relation_name": "DATAFESTAFRICA.INTERMEDIATE.stg_waec_grades"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.159070Z", "completed_at": "2024-10-24T09:31:01.164706Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.165349Z", "completed_at": "2024-10-24T09:31:01.165360Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007575035095214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.dim_students", "compiled": true, "compiled_code": "SELECT\n    students.student_id,\n    parent_id,\n    students.full_name,\n    class_short_name,\n    CASE \n        WHEN classes.class_title IS NULL THEN 'Alumni'\n        ELSE classes.class_title\n    END as student_class,\n    CASE \n        WHEN students.class_id <= 6 THEN 'Curent Student'\n        WHEN students.class_id = 7 THEN '2021 Alumni'\n        WHEN students.class_id = 8 THEN '2020 Alumni'\n        WHEN students.class_id = 9 THEN '2019 Alumni'\n    END AS student_status,\n    bus_pickup,\n    bus_dropoff,\n    department,\n    gender,\n    health_condition,\n    student_activity_status,\n    CASE \n        WHEN student_activity_status = 'Active' THEN activity\n        ELSE 'None'\n    END AS student_extracurricular_activity\nFROM DATAFESTAFRICA.INTERMEDIATE.stg_students students\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_classes classes\nON students.class_id = classes.class_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_student_activities student_activities\nON students.student_id = student_activities.student_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_extracurricular_activity activities\nON student_activities.activity_id = activities.activity_id", "relation_name": "DATAFESTAFRICA.CORE.dim_students"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.168769Z", "completed_at": "2024-10-24T09:31:01.187017Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.187611Z", "completed_at": "2024-10-24T09:31:01.187621Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020586013793945312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.fact_school_grades", "compiled": true, "compiled_code": "SELECT\n    md5(cast(coalesce(cast(student_course_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(marking_period_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as student_grades_id,\n    student_course_id,\n    CASE\n        WHEN marking_period_id IN (1, 2, 3) THEN 'First Term'\n        WHEN marking_period_id IN (4, 5, 6) THEN 'Second Term'\n        WHEN marking_period_id IN (7, 8, 9) THEN 'Third Term'\n    END AS term,\n    CASE\n        WHEN marking_period_id IN (1, 4, 7) THEN 'Principal Test'\n        WHEN marking_period_id IN (2, 5, 8) THEN 'Midterm Test'\n        WHEN marking_period_id IN (3, 6, 9) THEN 'Exams'\n    END AS assessment_type,\n    SUM(scores) AS total_scores,  -- Sum scores for each student_course_id and term\n    CASE\n        WHEN marking_period_id IN (1, 4, 7) THEN 10\n        WHEN marking_period_id IN (2, 5, 8) THEN 20\n        WHEN marking_period_id IN (3, 6, 9) THEN 70\n    END AS overall_score\nFROM DATAFESTAFRICA.INTERMEDIATE.stg_students_grades\nGROUP BY \n    student_course_id, \n    term,  -- Group by student_course_id and term\n    marking_period_id,\n    assessment_type,\n    overall_score\nORDER BY student_course_id, term", "relation_name": "DATAFESTAFRICA.CORE.fact_school_grades"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.190682Z", "completed_at": "2024-10-24T09:31:01.196284Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.197027Z", "completed_at": "2024-10-24T09:31:01.197037Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007826805114746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.dim_courses", "compiled": true, "compiled_code": "SELECT\n    course_id,\n    class_short_name,\n    class_title,\n    full_name as teacher,\n    course_title,\n    course_short_name,\n    course_department,\n    total_teaching_hours_period,\n    course_description,\n    course_created_at,\n    course_created_date_id,\n    course_updated_at,\n    course_updated_date_id\nFROM DATAFESTAFRICA.INTERMEDIATE.stg_courses courses\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_classes classes\nON courses.class_id = classes.class_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_teachers teachers\nON courses.teacher_id = teachers.teacher_id", "relation_name": "DATAFESTAFRICA.CORE.dim_courses"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.201348Z", "completed_at": "2024-10-24T09:31:01.216514Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.217117Z", "completed_at": "2024-10-24T09:31:01.217127Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017271041870117188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.data_baddies_datafest.not_null_dim_students_student_id.10ef5e35c7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect student_id\nfrom DATAFESTAFRICA.CORE.dim_students\nwhere student_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.219860Z", "completed_at": "2024-10-24T09:31:01.232882Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.233602Z", "completed_at": "2024-10-24T09:31:01.233612Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015021800994873047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.data_baddies_datafest.unique_dim_students_student_id.02754676d0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    student_id as unique_field,\n    count(*) as n_records\n\nfrom DATAFESTAFRICA.CORE.dim_students\nwhere student_id is not null\ngroup by student_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.236210Z", "completed_at": "2024-10-24T09:31:01.243765Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.244346Z", "completed_at": "2024-10-24T09:31:01.244355Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009328842163085938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.jamb_performance_metrics", "compiled": true, "compiled_code": "\n\nWITH total_scores as (\n    SELECT \n        student_course_id,\n        term,\n        SUM(total_scores) as total_scores\n    FROM DATAFESTAFRICA.CORE.fact_school_grades\n    GROUP BY student_course_id, term\n),\n\nschool_grades AS (\nSELECT \n    sc.student_id,\n    ROUND(AVG(ts.total_scores), 1) AS average_student_score  -- Calculate average scores across terms\nFROM \n    total_scores AS ts\nLEFT JOIN \n    DATAFESTAFRICA.INTERMEDIATE.stg_students_courses AS sc \nON \n    ts.student_course_id = sc.student_course_id\nGROUP BY \n    sc.student_id-- Group by student_id and course_id to get the average score\nORDER BY student_id\n),\n\naggregated_attendance AS (\n    SELECT \n        sc.student_id,\n        AVG(att.minutes_present) AS avg_student_minutes_present,\n        AVG(att.total_minutes) AS avg_student_total_minutes\n    FROM \n        DATAFESTAFRICA.INTERMEDIATE.stg_attendance att\n    LEFT JOIN \n        DATAFESTAFRICA.INTERMEDIATE.stg_students_courses sc\n    ON \n        att.student_course_id = sc.student_course_id\n    GROUP BY sc.student_id\n)\n\nSELECT DISTINCT\n    students.student_id,\n    students.full_name AS student_name,\n    students.student_class,\n    students.student_status,\n    students.health_condition,\n    department,\n    gender,\n    parents.full_name AS student_parent,\n    parents.education_level AS parent_education,\n    student_activity_status,\n    student_extracurricular_activity,\n    CAST(agg_attendance.avg_student_minutes_present AS INT) AS average_student_minutes_attendance,\n    CAST(agg_attendance.avg_student_total_minutes AS INT) AS average_expected_student_attendance,\n    sg.average_student_score,\n    CASE \n        WHEN average_student_score >= 50 THEN 'Pass'\n        WHEN average_student_score < 50 THEN 'Fail'\n    END AS student_school_performance,\n    CASE \n        WHEN discipline.student_offence IS NULL THEN 'None'\n        ELSE discipline.student_offence\n    END AS student_offence,\n    CASE \n        WHEN disciplinary_action_taken IS NULL THEN 'None'\n        ELSE disciplinary_action_taken\n    END AS disciplinary_action_taken,\n    CASE \n        WHEN teacher.full_name IS NULL THEN 'None'\n        ELSE teacher.full_name\n    END AS disciplinary_teacher,\n    jamb.exam_year AS jamb_exam_year,\n    jamb.jamb_score,\n    -- The school's threshold for JAMB performance is 200\n    CASE \n        WHEN jamb.jamb_score >= 200 THEN 'Pass'\n        WHEN jamb.jamb_score < 200 THEN 'Fail'\n    END AS jamb_performance\nFROM DATAFESTAFRICA.CORE.dim_students students\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_parents parents\n    ON students.parent_id = parents.parent_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_students_courses students_courses\n    ON students_courses.student_id = students.student_id\nLEFT JOIN aggregated_attendance agg_attendance\n    ON agg_attendance.student_id = students.student_id\nLEFT JOIN school_grades sg\n    ON sg.student_id = students.student_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_jamb_scores jamb\n    ON jamb.student_id = students.student_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_disciplinary_records discipline\n    ON discipline.student_id = students.student_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_teachers teacher\n    ON discipline.teacher_id = teacher.teacher_id", "relation_name": "DATAFESTAFRICA.CORE.jamb_performance_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.247166Z", "completed_at": "2024-10-24T09:31:01.254798Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.255905Z", "completed_at": "2024-10-24T09:31:01.255921Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010267972946166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.data_baddies_datafest.not_null_fact_school_grades_student_grades_id.fa1854b835", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect student_grades_id\nfrom DATAFESTAFRICA.CORE.fact_school_grades\nwhere student_grades_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.259835Z", "completed_at": "2024-10-24T09:31:01.270649Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.271252Z", "completed_at": "2024-10-24T09:31:01.271262Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01290273666381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.data_baddies_datafest.relationships_fact_school_grades_student_course_id__student_course_id__ref_stg_students_courses_.05a4e66004", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select student_course_id as from_field\n    from DATAFESTAFRICA.CORE.fact_school_grades\n    where student_course_id is not null\n),\n\nparent as (\n    select student_course_id as to_field\n    from DATAFESTAFRICA.INTERMEDIATE.stg_students_courses\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.274236Z", "completed_at": "2024-10-24T09:31:01.280506Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.281365Z", "completed_at": "2024-10-24T09:31:01.281376Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008502006530761719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.data_baddies_datafest.unique_fact_school_grades_student_grades_id.6a17d0d5b5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    student_grades_id as unique_field,\n    count(*) as n_records\n\nfrom DATAFESTAFRICA.CORE.fact_school_grades\nwhere student_grades_id is not null\ngroup by student_grades_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.284328Z", "completed_at": "2024-10-24T09:31:01.293021Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.293793Z", "completed_at": "2024-10-24T09:31:01.293803Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010820865631103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_baddies_datafest.waec_performance_metrics", "compiled": true, "compiled_code": "\n\nWITH total_scores as (\n    SELECT \n        student_course_id,\n        term,\n        SUM(total_scores) as total_scores\n    FROM DATAFESTAFRICA.CORE.fact_school_grades\n    GROUP BY student_course_id, term\n),\n\nschool_grades AS (\nSELECT \n    sc.student_course_id,\n    ROUND(AVG(ts.total_scores), 1) AS average_student_score  -- Calculate average scores across terms\nFROM \n    total_scores AS ts\nLEFT JOIN \n    DATAFESTAFRICA.INTERMEDIATE.stg_students_courses AS sc \nON \n    ts.student_course_id = sc.student_course_id\nGROUP BY \n    sc.student_course_id-- Group by student_id and course_id to get the average score\nORDER BY student_course_id\n)\n\nSELECT\n    students_courses.student_course_id,\n    students.student_id,\n    courses.course_id,\n    students.full_name AS student_name,\n    students.department,\n    students.gender,\n    students.health_condition,\n    students.student_class,\n    students.student_status,\n    students.bus_pickup,\n    students.bus_dropoff,\n    students.student_activity_status,\n    students.student_extracurricular_activity,\n    courses.course_title AS course,\n    courses.class_title as course_class,\n    courses.course_department,\n    parents.full_name AS parent,\n    parents.education_level AS parent_education,\n    courses.teacher AS teacher,\n    CASE \n        WHEN polls.rating_type IS NULL THEN 'None'\n        ELSE polls.rating_type\n    END AS rating_type,\n    CASE \n        WHEN polls.number_of_votes IS NULL THEN 0\n        ELSE polls.number_of_votes\n    END AS number_of_votes,\n    CASE \n        WHEN discipline.student_offence IS NULL THEN 'None'\n        ELSE discipline.student_offence\n    END AS student_offence,\n    CASE \n        WHEN discipline.disciplinary_action_taken IS NULL THEN 'None'\n        ELSE discipline.disciplinary_action_taken\n    END AS disciplinary_action_taken,\n    CASE \n        WHEN teacher.full_name IS NULL THEN 'None'\n        ELSE teacher.full_name\n    END AS disciplinary_teacher,\n    average_student_score,\n    CASE \n        WHEN average_student_score >= 50 THEN 'Pass'\n        WHEN average_student_score < 50 THEN 'Fail'\n    END AS student_evaluation,\n    waec_grades.exam_year as waec_exam_year, -- Make sure this column exists in the waec_grades table\n    waec_grades.waec_grade,\n    CAST(AVG(attendance.minutes_present) AS INT) AS average_student_minutes_attendance,\n    CAST(AVG(attendance.total_minutes) AS INT) AS average_expected_student_attendance\nFROM DATAFESTAFRICA.CORE.dim_students students\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_students_courses students_courses\n    ON students.student_id = students_courses.student_id\nLEFT JOIN DATAFESTAFRICA.CORE.dim_courses courses\n    ON courses.course_id = students_courses.course_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_parents parents\n    ON parents.parent_id = students.parent_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_disciplinary_records discipline\n    ON discipline.student_id = students.student_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_teachers teacher\n    ON discipline.teacher_id = teacher.teacher_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_student_polls polls\n    ON teacher.teacher_id = polls.related_teacher_id\nLEFT JOIN school_grades\n    ON school_grades.student_course_id = students_courses.student_course_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_waec_grades waec_grades\n    ON waec_grades.student_course_id = students_courses.student_course_id\nLEFT JOIN DATAFESTAFRICA.INTERMEDIATE.stg_attendance attendance\n    ON students_courses.student_course_id = attendance.student_course_id\nGROUP BY \n    students_courses.student_course_id,\n    students.student_id,\n    courses.course_id,\n    students.full_name,\n    students.department,\n    students.gender,\n    students.student_status,\n    students.health_condition,\n    students.student_class,\n    students.bus_pickup,\n    students.bus_dropoff,\n    students.student_activity_status,\n    students.student_extracurricular_activity,\n    courses.course_title,\n    courses.class_title,\n    courses.course_department,\n    courses.teacher,\n    teacher.full_name,\n    parents.full_name,\n    parents.education_level,\n    polls.rating_type,\n    polls.number_of_votes,\n    average_student_score,\n    discipline.student_offence,\n    discipline.disciplinary_action_taken,\n    waec_grades.exam_year,\n    waec_grades.waec_grade", "relation_name": "DATAFESTAFRICA.CORE.waec_performance_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.296610Z", "completed_at": "2024-10-24T09:31:01.303399Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.304129Z", "completed_at": "2024-10-24T09:31:01.304140Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008945226669311523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.data_baddies_datafest.not_null_dim_courses_course_id.4192218ca5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect course_id\nfrom DATAFESTAFRICA.CORE.dim_courses\nwhere course_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T09:31:01.307949Z", "completed_at": "2024-10-24T09:31:01.314442Z"}, {"name": "execute", "started_at": "2024-10-24T09:31:01.315307Z", "completed_at": "2024-10-24T09:31:01.315319Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00934910774230957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.data_baddies_datafest.unique_dim_courses_course_id.25c6956018", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    course_id as unique_field,\n    count(*) as n_records\n\nfrom DATAFESTAFRICA.CORE.dim_courses\nwhere course_id is not null\ngroup by course_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 13.819771766662598, "args": {"log_path": "/Users/nancyamandi/datafest_datathon_2024/datafest_datathon/dbt_data_baddies_datafest/logs", "vars": {}, "enable_legacy_logger": false, "require_explicit_package_overrides_for_builtin_materializations": true, "version_check": true, "quiet": false, "log_level": "info", "project_dir": "/Users/nancyamandi/datafest_datathon_2024/datafest_datathon/dbt_data_baddies_datafest", "static_parser": true, "favor_state": false, "partial_parse": true, "log_format": "default", "partial_parse_file_diff": true, "warn_error_options": {"include": [], "exclude": []}, "send_anonymous_usage_stats": true, "empty_catalog": false, "print": true, "populate_cache": true, "use_colors_file": true, "introspect": true, "log_level_file": "debug", "exclude": [], "source_freshness_run_project_hooks": false, "static": false, "log_file_max_bytes": 10485760, "invocation_command": "dbt docs generate", "write_json": true, "select": [], "show_resource_report": false, "profiles_dir": "/Users/nancyamandi/datafest_datathon_2024/datafest_datathon/dbt_data_baddies_datafest", "strict_mode": false, "defer": false, "cache_selected_only": false, "which": "generate", "require_resource_names_without_spaces": false, "log_format_file": "debug", "printer_width": 80, "compile": true, "use_colors": true, "macro_debugging": false, "indirect_selection": "eager"}}